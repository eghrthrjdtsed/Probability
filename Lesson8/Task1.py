'''Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks):
zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
Полученные значения должны быть равны. Найдите коэффициент корреляции Пирсона с помощью ковариации и 
среднеквадратичных отклонений двух признаков, 
а затем с использованием функций из библиотек numpy и pandas.'''

import numpy as np
import scipy.stats as stats 
import matplotlib.pyplot as plt
import pandas as pd


zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

df = pd.DataFrame({'zpp': [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
'ksp': [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]})

print(f"cov: {df['zpp']. corr(df['ksp'])}") 

print(np.cov(zp, ks, ddof=1))
print(f"std zp: {np.std(zp, ddof=1)}")
print(f"std ks: {np.std(ks, ddof=1)}")

cov = np.mean(zp * ks) - np.mean(zp) * np.mean(ks)
print(f"cov: {cov}")

corrcoef = 10175.37777778 / (62.31318747531162 * 183.99544076477068)
print(f"corrcoef: {corrcoef:.8f}")

r = np.corrcoef(zp, ks)
print(f"r: {r}")

print(stats.spearmanr(zp, ks))

plt.scatter(zp, ks)
plt.title(f"r = {round(r[0][1], 3)}")
plt.xlabel('x')
plt.ylabel('y')
plt.show()

# Мы видим из графика, что линейная взаимосвязь двух показателей есть, взаимосвязь прямая, 
# зависимость очень сильная 0.9757. С увеличением зарплаты
# растет значение поведенческого кредитного скоринга, чем выше бал, тем больше вероятность
# одобрения заявки. Скоринговый балл – это показатель платежеспособности заемщика.